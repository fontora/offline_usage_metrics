################
## GENERATION ##
################

## DAILY ##

[OUM Gen - Daily]
cron_schedule = 8 2 * * *
enableSched = 1
schedule_window = 45
search = index="_internal" sourcetype="splunkd" source="*license_usage.log*" TERM("LicenseUsage") TERM("RolloverSummary") pool="*" stack!="fixed-sourcetype*" earliest=-1d@d latest=@d \
| bin span=1d _time \
| stats sum(b) AS usage_bytes BY _time, stacksz, licenseGuids \
| appendcols \
    [| rest splunk_server=local /services/server/info f=host f=version \
    | table host, version ] \
| appendcols \
    [ search index="_internal" source="*metrics.log*" TERM("Metrics") TERM("group=per_sourcetype_thruput") OR (TERM("group=tcpin_connections") (TERM("connectionType=cooked") OR TERM("connectionType=cookedSSL")) fwdType="*") earliest=-1d@d latest=@d \
    | stats estdc(series) AS sourcetypes, estdc(sourceIp) AS forwarders ] \
| appendcols \
    [ search index="_introspection" sourcetype="splunk_resource_usage" component::PerProcess data.search_props.sid::* data.search_props.type::ad-hoc earliest=-1d@d latest=@d \
    | stats count(data.search_props.sid) AS searches ] \
| appendcols \
    [ search index="_internal" sourcetype="splunk_web_access" TERM("app") NOT user="-" earliest=-1d@d latest=@d \
    | rex field=uri_path "/[^/]+/(?<path2>[^/]+)/(?<app>[^/]+)" \
    | where path2="app" \
    | stats estdc(user) AS users, estdc(app) AS apps, count as page_views ] \
| eval warnings=if(usage_bytes>stacksz, 1, 0) \
| eval capacity_gb=round(stacksz/1024/1024/1024, 2) \
| eval usage_gb=round(usage_bytes/1024/1024/1024, 2) \
| eval day=strftime(_time, "%F") \
| table day, host, licenseGuids, version, capacity_gb, usage_gb, warnings, sourcetypes, forwarders, searches, page_views, apps, users \
| rename host AS "server" licenseGuids AS "guids"\
| outputlookup append=true oum_daily

## MONTHLY ##

[OUM Gen - Monthly]
cron_schedule = 8 3 1 * *
enableSched = 1
schedule_window = 45
search = | inputlookup oum_daily\
| eval last_month=strftime(relative_time(now(), "-1mon"), "%Y-%m")\
| sort 35 -day\
| where match(day, last_month)\
| sort -usage_gb\
| streamstats count AS row\
| eventstats avg(eval(if(row<=6, usage_gb, null()))) AS top_avg_usage_gb\
| stats values(last_month) AS month, values(server) AS server values(guids) AS guids, values(version) AS version, max(capacity_gb) AS capacity_gb_max, max(usage_gb) AS usage_gb_max, sum(warnings) AS warnings_sum, values(top_avg_usage_gb) AS top_avg_usage_gb p90(sourcetypes) AS sourcetypes_p90, p90(forwarders) AS forwarders_p90, p90(searches) AS searches_p90, p90(page_views) AS page_views_p90, p90(apps) AS apps_p90, p90(users) AS users_p90\
| table month, server, guids, version, capacity_gb_max, usage_gb_max, warnings_sum, top_avg_usage_gb, sourcetypes_p90, forwarders_p90, searches_p90, page_views_p90, apps_p90, users_p90\
| outputlookup append=true oum_monthly

##################
## USER REPORTS ##
##################

## DAILY ##

[Offline Usage Metrics - Daily]
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
search = | inputlookup oum_monthly\
| table month, server, guids, version, capacity_gb_max, usage_gb_max, warnings_sum, top_avg_usage_gb, sourcetypes_p90, forwarders_p90, searches_p90, page_views_p90, apps_p90, users_p90\
| rename month AS "Date", server AS "Server", guids AS "GUIDs", version AS "Version", capacity_gb_max AS "License Capacity (bytes)", usage_gb_max AS "License Consumed (bytes)", warnings_sum AS "Warnings", top_avg_usage_gb AS "License Top 20% Average (GiB)", sourcetypes_p90 AS "Sourcetypes", forwarders_p90 AS "Forwarders", searches_p90 AS "Searches", page_views_p90 AS "Page Views", apps_p90 AS "Apps Accessed", users_p90 AS "Users"

## MONTHLY ##

[Offline Usage Metrics - Monthly]
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
search = | inputlookup oum_daily\
| table day, server, guids, version, capacity_gb, usage_gb, warnings, sourcetypes, forwarders, searches, page_views, apps, users\
| rename day AS "Date", server AS "Server", guids AS "GUIDs", version AS "Version", capacity_gb AS "License Capacity (GiB)", usage_gb AS "License Consumed (GiB)", warnings AS "Warnings", sourcetypes AS "Sourcetypes", forwarders AS "Forwarders", searches AS "Searches", page_views AS "Page Views", apps AS "Apps Used", users AS "Users"
